{"ast":null,"code":"var _jsxFileName = \"/home/nicolastorres/Documentos/Projects/React/gif-expert-app/src/GifExpertApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifExpertApp = () => {\n  _s();\n\n  const [Anime, setAnime] = useState(['Demon Slayer', 'Tokyo Revenger', 'Dangaropa', 'Naruto', 'Jojo']); // let anime = ['Demon Slayer', 'Tokyo Revenger', 'Dangaropa', 'Naruto', 'Jojo']\n\n  const handleAdd = () => {\n    setAnime.add(...setAnime, 'Soul eater');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GifExpertApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add Anime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: Anime.map(an => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: an\n        }, an, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifExpertApp, \"2d78PRjl0ggaXWt5+7/+VaILeBI=\");\n\n_c = GifExpertApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifExpertApp\");","map":{"version":3,"sources":["/home/nicolastorres/Documentos/Projects/React/gif-expert-app/src/GifExpertApp.js"],"names":["React","useState","GifExpertApp","Anime","setAnime","handleAdd","add","map","an"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,WAAnC,EAAgD,QAAhD,EAA0D,MAA1D,CAAD,CAAlC,CAF8B,CAI9B;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAACE,GAAT,CAAa,GAAGF,QAAhB,EAAyB,YAAzB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAGC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAEQF,KAAK,CAACI,GAAN,CAAWC,EAAE,IAAI;AACb,4BAAO;AAAA,oBAAkBA;AAAlB,WAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAcH,CAxBM;;GAAMN,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from 'react'\n\n\nexport const GifExpertApp = () => {\n\n    const [Anime, setAnime] = useState(['Demon Slayer', 'Tokyo Revenger', 'Dangaropa', 'Naruto', 'Jojo'])\n\n    // let anime = ['Demon Slayer', 'Tokyo Revenger', 'Dangaropa', 'Naruto', 'Jojo']\n\n    const handleAdd = () => {\n        setAnime.add(...setAnime,'Soul eater')\n    }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr/>\n            <button onClick={ handleAdd }>Add Anime</button>\n            <ol>\n                {\n                    Anime.map( an => {\n                        return <li key={ an } >{ an }</li>\n                    } )\n                }\n            </ol>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}