{"ast":null,"code":"var _jsxFileName = \"/home/nicolastorres/Documentos/Projects/React/gif-expert-app/src/components/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = _ref => {\n  _s();\n\n  let {\n    anime\n  } = _ref;\n  const [images, setImages] = useState([]); // hook para que se dispare solo una vez la api\n\n  useEffect(() => {\n    getGifs();\n  }, []);\n\n  const getGifs = async () => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(anime)}&limit=10&api_key=j6Gcl3UXbQoa0RP4Gw2EMvAVsxSk4EYH`;\n    const resp = await fetch(url);\n    const {\n      data\n    } = await resp.json();\n    const gifs = data.map(img => {\n      var _img$images;\n\n      return {\n        id: img.id,\n        title: img.title,\n        url: (_img$images = img.images) === null || _img$images === void 0 ? void 0 : _img$images.downsized_medium.url\n      };\n    });\n    console.log(gifs);\n    setImages(gifs);\n  }; // parentesis retorna\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: anime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, { ...img\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/home/nicolastorres/Documentos/Projects/React/gif-expert-app/src/components/GifGrid.js"],"names":["React","useEffect","useState","GifGridItem","GifGrid","anime","images","setImages","getGifs","url","encodeURI","resp","fetch","data","json","gifs","map","img","id","title","downsized_medium","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CADoC,CAGpC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GACN,0CAA0CC,SAAS,CAAEL,KAAF,CAAW,oDADjE;AAEA,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAxB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMF,IAAI,CAACG,IAAL,EAAvB;AAEA,UAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AAAA;;AAC7B,aAAO;AACLC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADH;AAELC,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAFN;AAGLV,QAAAA,GAAG,iBAAEQ,GAAG,CAACX,MAAN,gDAAE,YAAYc,gBAAZ,CAA6BX;AAH7B,OAAP;AAKD,KANY,CAAb;AAQAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEAR,IAAAA,SAAS,CAACQ,IAAD,CAAT;AACD,GAjBD,CARoC,CA2BpC;;;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKV;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGC,MAAM,CAACU,GAAP,CAAYC,GAAD,iBACV,QAAC,WAAD,OAA8BA;AAA9B,SAAkBA,GAAG,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CAtCM;;GAAMd,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ anime }) => {\n  const [images, setImages] = useState([]);\n\n  // hook para que se dispare solo una vez la api\n  useEffect(() => {\n    getGifs();\n  }, []);\n\n  const getGifs = async () => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( anime ) }&limit=10&api_key=j6Gcl3UXbQoa0RP4Gw2EMvAVsxSk4EYH`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n\n    console.log(gifs);\n\n    setImages(gifs);\n  };\n\n  // parentesis retorna\n  return (\n    <>\n      <h3>{anime}</h3>\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}