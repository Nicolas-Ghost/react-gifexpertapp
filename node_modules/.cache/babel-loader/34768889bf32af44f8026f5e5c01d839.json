{"ast":null,"code":"var _jsxFileName = \"/home/nicolastorres/Documentos/Projects/React/gif-expert-app/src/components/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = _ref => {\n  _s();\n\n  let {\n    anime\n  } = _ref;\n  const [images, setImages] = useState([]); // hook para que se dispare solo una vez la api\n  // Si el anime cambia, lanza el api\n\n  useEffect(() => {\n    getGifs(anime).then(imgs => setImages(imgs));\n  }, [anime]); // parentesis retorna\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: anime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, { ...img\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/home/nicolastorres/Documentos/Projects/React/gif-expert-app/src/components/GifGrid.js"],"names":["React","useEffect","useState","getGifs","GifGridItem","GifGrid","anime","images","setImages","then","imgs","map","img","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADoC,CAGpC;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAAEG,KAAF,CAAP,CACCG,IADD,CACMC,IAAI,IAAIF,SAAS,CAAEE,IAAF,CADvB;AAED,GAHQ,EAGN,CAAEJ,KAAF,CAHM,CAAT,CALoC,CAYpC;;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGC,MAAM,CAACI,GAAP,CAAYC,GAAD,iBACV,QAAC,WAAD,OAA8BA;AAA9B,SAAkBA,GAAG,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CAvBM;;GAAMR,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ anime }) => {\n  const [images, setImages] = useState([]);\n\n  // hook para que se dispare solo una vez la api\n  // Si el anime cambia, lanza el api\n  useEffect(() => {\n    getGifs( anime )\n    .then(imgs => setImages( imgs ))\n  }, [ anime ]);\n\n  \n\n  // parentesis retorna\n  return (\n    <>\n      <h3>{anime}</h3>\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}